version: 2.1
default: &default
  working_directory: /mbook/app/rails/demo
  docker:
    - image: circleci/ruby:2.7.3-node-browsers
      user: root
    - image: circleci/mysql:5.7-ram
      name: demo_db
      command: |
        # ci_prebuilt_db 同様の sql_mode となるように起動時に sql_mode の指定を行う
        mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
  environment:
    - RAILS_ENV: test
    - DB_HOST: demo_db
    - DB_USERNAME: root
    - DISABLE_SPRING: 1
    - TZ: Asia/Tokyo
    - LANG: C.UTF-8
    - RSPEC_RETRY_COUNT: 5

jobs:
  build_and_run_test:
    <<: *default
    parallelism: 1
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install bundler
          command: |
            source ~/.bashrc
            gem install bundler -v 2.2.33
      # Install gems
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum ".ruby-version"}}-{{ checksum "Gemfile.lock"}}
            - gem-cache-v1-{{ checksum ".ruby-version"}}
            - gem-cache-v1
      - run:
          name: Bundle install
          command: |
            source ~/.bashrc
            bundle check --path .bundle || bundle install --path .bundle
      - save_cache:
          key: gem-cache-v1-{{ checksum ".ruby-version"}}-{{ checksum "Gemfile.lock"}}
          paths:
            - .bundle

      - restore_cache:
          name: Restore yarn dependencies cache
          keys:
            - v1-yarn-dependencies-{{ checksum "yarn.lock" }}
            - v1-yarn-dependencies
      - run:
          working_directory: /mbook/app/rails/demo
          command: yarn install --frozen-lockfile

      - save_cache:
          name: Save yarn dependencies cache
          key: v1-yarn-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: rm -rf ./.git

      - run: mkdir -p /tmp/test-results/rspec

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://demo_db:3306 -timeout 1m

      - run:
          name: Install mysql client
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
            apt update
            apt install --no-install-recommends --yes default-mysql-client

      - run:
          name: Prepare DB
          command: |
            source ~/.bashrc
            RAILS_ENV=test bin/rails db:create
            RAILS_ENV=test bin/rails db:migrate
workflows:
  version: 2
  build_and_test:
    jobs:
      - build_and_run_test
